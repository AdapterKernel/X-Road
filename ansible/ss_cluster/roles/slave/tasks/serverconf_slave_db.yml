---
- name: do a base backup
  become_user: postgres
  become: yes
  environment:
      PGSSLMODE: verify-ca 
      PGSSLROOTCERT: /etc/xroad/postgresql/ca.crt
      PGSSLCERT: /etc/xroad/postgresql/server.crt 
      PGSSLKEY: /etc/xroad/postgresql/server.key
  shell: |
      cd "{{ postgresql_data_dir }}"
      rm -rf *
      pg_basebackup -h "{{ master_host }}" -p "{{ serverconf_db_port }}" -U "{{ nodename }}" -D .
  args:
    chdir: "{{ postgresql_data_dir }}"
    creates: "{{ postgresql_data_dir }}/recovery.conf"
 
- name: install recovery conf
  template: 
      src: "recovery.conf.j2" 
      dest: "{{ postgresql_data_dir }}/recovery.conf"
      owner: postgres
      group: postgres 

- name: configure slave database
  lineinfile:
      dest: "{{ postgresql_config_dir }}/postgresql.conf"
      regexp: "^\\s*#?{{ item.option }}\\s*="
      line: "{{ item.option }} = {{ item.value }}"
      state: "{{ item.state | default('present') }}"
  with_items:
      - { option: 'ssl', value: 'on' }
      - { option: 'ssl_ca_file', value: "'/etc/xroad/postgresql/ca.crt'" }
      - { option: 'ssl_cert_file', value: "'/etc/xroad/postgresql/server.crt'" }
      - { option: 'ssl_key_file', value: "'/etc/xroad/postgresql/server.key'" }
      - { option: 'listen_addresses', value: "'localhost'" }
      - { option: 'wal_level', value: "'minimal'" }
      - { option: 'max_wal_senders', value: '0', state: 'absent' }
      - { option: 'hot_standby', value: 'on' }
      - { option: 'hot_standby_feedback', value: 'on' }

- name: enable postgresql service
  service:
      name: "{{ postgresql_serverconf_service }}"
      enabled: yes
      state: started
