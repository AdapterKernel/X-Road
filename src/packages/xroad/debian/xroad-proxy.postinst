#!/bin/bash

set -e

. /usr/share/debconf/confmodule


#add groups
groups="xroad-security-officer xroad-registration-officer xroad-service-administrator xroad-system-administrator xroad-securityserver-observer"

db_name=serverconf
db_url=jdbc:postgresql://127.0.0.1:5432/${db_name}
db_user=serverconf
db_passwd=$(head -c 24 /dev/urandom | base64 | tr "/+" "_-")
db_properties=/etc/xroad/db.properties


die () {
    echo >&2 "$@"
    exit 1
}


chmod 0440 /etc/sudoers.d/xroad-proxy

case "$1" in
 configure)

  test -d /var/spool/xroad && test -w /var/spool/xroad || mkdir /var/spool/xroad ; chown xroad:xroad /var/spool/xroad
  test -d /var/cache/xroad && test -w /var/cache/xroad || mkdir /var/cache/xroad ; chown xroad:xroad /var/cache/xroad
  test -d /etc/xroad/globalconf && test -w /etc/xroad/globalconf || mkdir /etc/xroad/globalconf ; chown xroad:xroad  /etc/xroad/globalconf
  chown -h xroad:xroad /etc/xroad/conf.d/jetty-logback-context-name.xml

  test -f /etc/authbind/byport/80 && test -f /etc/authbind/byport/443 || touch /etc/authbind/byport/80; touch /etc/authbind/byport/443; chown xroad /etc/authbind/byport/80; chown xroad /etc/authbind/byport/443; chmod 500 /etc/authbind/byport/80; chmod 500 /etc/authbind/byport/443

  test -e /etc/nginx/sites-enabled/clientproxy && rm /etc/nginx/sites-enabled/clientproxy
  test -e /etc/nginx/sites-enabled/clientproxy-ssl && rm /etc/nginx/sites-enabled/clientproxy-ssl



  #is database connection configured?
  if  [[ -f ${db_properties}  && `crudini --get ${db_properties} '' serverconf.hibernate.connection.url` != "" ]]
    then
      db_url=`crudini --get ${db_properties} '' serverconf.hibernate.connection.url`
      db_user=`crudini --get ${db_properties} '' serverconf.hibernate.connection.username`
      db_passwd=`crudini --get ${db_properties} '' serverconf.hibernate.connection.password`
   else

    echo "no db settings detected, creating local db"

    if ! netstat -na | grep -q :5432
      then echo -e  "\n\nIs postgres running on port 5432 ?"
       echo -e "Aborting installation! please fix issues and rerun with apt-get -f install \n\n"
      exit 100
    fi

     if  ! su - postgres -c "psql --list -tAF ' '" | grep template1 | awk '{print $3}' | grep -q "UTF8"
      then echo -e "\n\npostgreSQL is not UTF8 compatible."
       echo -e "Aborting installation! please fix issues and rerun with apt-get -f install\n\n"
       exit 101
    fi

    if [[ `su - postgres -c "psql postgres -tAc \"SELECT 1 FROM pg_roles WHERE rolname='${db_user}'\" "` == "1" ]]
      then
        echo  "$db_user user exists, skipping role creation"
        echo "ALTER ROLE ${db_user} WITH PASSWORD '${db_passwd}';" | su - postgres -c psql postgres
      else
        echo "CREATE ROLE ${db_user} LOGIN PASSWORD '${db_passwd}';" | su - postgres -c psql postgres
      fi

      if [[ `su - postgres -c "psql postgres -tAc \"SELECT 1 FROM pg_database WHERE datname='${db_name}'\""`  == "1" ]]
      then
        echo "database ${db_name} exists"
      else
        su - postgres -c "createdb ${db_name} -O ${db_user} -E UTF-8"
      fi

      su - postgres -c "psql serverconf -tAc \"CREATE EXTENSION IF NOT EXISTS hstore;\""

      touch ${db_properties}
      crudini --set ${db_properties} '' serverconf.hibernate.jdbc.use_streams_for_binary true
      crudini --set ${db_properties} '' serverconf.hibernate.dialect ee.ria.xroad.common.db.CustomPostgreSQLDialect
      crudini --set ${db_properties} '' serverconf.hibernate.connection.driver_class org.postgresql.Driver
      crudini --set ${db_properties} '' serverconf.hibernate.connection.url ${db_url}
      crudini --set ${db_properties} '' serverconf.hibernate.connection.username  ${db_user}
      crudini --set ${db_properties} '' serverconf.hibernate.connection.password ${db_passwd}

  fi
  chown xroad:xroad ${db_properties}
  chmod 640 ${db_properties}

  node_type=$(crudini --get '/etc/xroad/conf.d/node.ini' node type 2>/dev/null || echo standalone)

  if [[ "$node_type" == "slave" ]]; then
      echo "Skipping database migrations on cluster slave node"
  else 
      echo "running ${db_name} database migrations"
      cd /usr/share/xroad/db/
      /usr/share/xroad/db/liquibase.sh --classpath=/usr/share/xroad/jlib/proxy.jar --url="${db_url}?dialect=ee.ria.xroad.common.db.CustomPostgreSQLDialect" --changeLogFile=/usr/share/xroad/db/${db_name}-changelog.xml --password=${db_passwd} --username=${db_user}  update || die "Connection to database has failed, please check database availability and configuration in ${db_properties} file"

      if dpkg --compare-versions "$2" le-nl "6.8"
      then
          /usr/share/xroad/db/backup_and_remove_non-member_permissions.sh
      fi
  fi

  RET=""
  db_get xroad-common/username
  AUSER="$RET"

  for groupname in $groups
  do
      if ! getent group $groupname > /dev/null; then
          addgroup --system --quiet  $groupname
      fi
      adduser $AUSER $groupname
  done

 ;;

 abort-upgrade|abort-remove|abort-deconfigure)
 ;;

 *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
 ;;
esac

db_stop

service rsyslog restart
#workaround for buggy nginx installation
/usr/sbin/nginx -s stop || true
service nginx restart
service xroad-confclient restart
service xroad-proxy restart
service xroad-jetty restart
service xroad-signer restart

exit 0
