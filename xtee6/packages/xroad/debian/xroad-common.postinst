#!/bin/bash

set -e


if [ "$1" = configure ]; then
    # Make sure the administrative user exists
    if ! getent passwd sdsb > /dev/null; then
        adduser --system --quiet --home /var/lib/sdsb --no-create-home \
            --shell /bin/bash --group --gecos "X-Road system user" sdsb
    fi

    # check validity of sdsb user and group
    if [ "`id -u sdsb`" -eq 0 ]; then
        echo "The sdsb system user must not have uid 0 (root).
Please fix this and reinstall this package." >&2
        exit 1
    fi
    if [ "`id -g sdsb`" -eq 0 ]; then
        echo "The sdsb system user must not have root as primary group.
Please fix this and reinstall this package." >&2
        exit 1
    fi
    #add sdsb to shadow group for pam 
    adduser sdsb shadow

    # ensure home directory ownership
    mkdir -p /var/lib/sdsb/backup
    su - sdsb -c "test -O /var/lib/sdsb &&
            test -G /var/lib/sdsb" || \
        chown sdsb:sdsb /var/lib/sdsb 
    chown sdsb:sdsb /var/lib/sdsb/backup
    chmod 0775 /var/lib/sdsb

    # nicer log directory permissions
    mkdir -p -m1770 /var/log/sdsb
    chmod 1770 /var/log/sdsb
    chown sdsb:sdsb /var/log/sdsb

    # test and fix config folder
    su - sdsb -c "test -O /etc/sdsb &&
            test -G /etc/sdsb" || \
        chown sdsb:sdsb /etc/sdsb
    chmod 0770 /etc/sdsb

    #tmp folder
    mkdir -p /var/tmp/sdsb
    chmod 1770 /var/tmp/sdsb
    chown sdsb:sdsb /var/tmp/sdsb

    chmod 770 /etc/sdsb/ssl
    chown sdsb:sdsb /etc/sdsb/ssl

    # create socket directory
    [ -d /var/run/sdsb ] || \
       install -d -m 2770 -o sdsb -g sdsb /var/run/sdsb

    #local overrides
    test -f /etc/sdsb/services/local.conf || touch /etc/sdsb/services/local.conf 
    test -f /etc/sdsb/conf.d/local.ini || touch /etc/sdsb/conf.d/local.ini

    test -d /etc/sdsb/signer || mkdir -p -m0700 /etc/sdsb/signer && chown sdsb:sdsb /etc/sdsb/signer
    test -d /etc/sdsb/conf.d || mkdir -p /etc/sdsb/conf.d && chown sdsb:sdsb /etc/sdsb/conf.d
    test -d /etc/sdsb/ssl || mkdir /etc/sdsb/ssl
    test -e /etc/nginx/sites-enabled/default && rm /etc/nginx/sites-enabled/default

    chmod 0440 /etc/sudoers.d/xroad

    #check if java trustAnchor file is non-empty. add certs if neccecary
    JAVACERTS=`find  /etc/ssl/certs/java/ -type f -size +1k -print -quit`
    if [ -z "$JAVACERTS" ]
     then 
       find /etc/ssl/certs -name \*.pem | while read filename; do alias=$(basename $filename .pem | tr A-Z a-z | tr -cs a-z0-9 _);     alias=${alias%*_}; echo "+${filename}";     done | java  -jar /usr/share/ca-certificates-java/ca-certificates-java.jar -storepass "changeit"
    fi

fi    

service xroad-signer restart || service xroad-signer start

exit 0
