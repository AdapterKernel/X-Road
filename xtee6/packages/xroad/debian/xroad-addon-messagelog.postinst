#!/bin/bash


db_name=messagelog
db_url=jdbc:postgresql://127.0.0.1:5432/${db_name}
db_user=messagelog
db_passwd=$(head -c 24 /dev/urandom | base64 | tr "/+" "_-")
db_properties=/etc/xroad/db.properties

die () {
    echo >&2 "$@"
    exit 1
}



if  [[ -f ${db_properties}  && `crudini --get ${db_properties} '' messagelog.hibernate.connection.url` != "" ]]
then

   db_url=`crudini --get ${db_properties} '' messagelog.hibernate.connection.url`
   db_user=`crudini --get ${db_properties} '' messagelog.hibernate.connection.username`
   db_passwd=`crudini --get ${db_properties} '' messagelog.hibernate.connection.password`

else

    echo "no db settings detected, creating local db"

    if ! netstat -na | grep -q :5432
    then
      echo  "Is postgres running on port 5432 ?"
      echo "Aborting installation! please fix issues and rerun with apt-get -f install"
      exit 100
    fi

    if ! su - postgres -c "psql --list -tAF ' '" | grep template1 | awk '{print $3}' | grep -q "UTF8"
    then
      echo "postgreSQL is not UTF8 compatible."
      echo "Aborting installation! please fix issues and rerun with apt-get -f install"
      exit 101
    fi

      if [[ `su - postgres -c "psql postgres -tAc \"SELECT 1 FROM pg_roles WHERE rolname='$db_user'\" "` == "1" ]]
      then
        echo  "$db user exists, skipping schema creation"
        echo "ALTER ROLE ${db_user} WITH PASSWORD '${db_passwd}';" | su - postgres -c psql postgres
      else
        echo "CREATE ROLE $db_user LOGIN PASSWORD '$db_passwd';" | su - postgres -c psql postgres
      fi

      if [[ `su - postgres -c "psql postgres -tAc \"SELECT 1 FROM pg_database WHERE datname='$db_name'\""`  == "1" ]]
      then
        echo "database $db_name exists"
      else
        su - postgres -c "createdb $db_name -O $db_user -E UTF-8"
      fi

      touch ${db_properties}

      crudini --set ${db_properties} '' messagelog.hibernate.jdbc.use_streams_for_binary true
      crudini --set ${db_properties} '' messagelog.hibernate.dialect ee.ria.xroad.common.db.CustomPostgreSQLDialect
      crudini --set ${db_properties} '' messagelog.hibernate.connection.driver_class org.postgresql.Driver
      crudini --set ${db_properties} '' messagelog.hibernate.connection.url ${db_url}
      crudini --set ${db_properties} '' messagelog.hibernate.connection.username  ${db_user}
      crudini --set ${db_properties} '' messagelog.hibernate.connection.password ${db_passwd}


fi 


chown xroad:xroad ${db_properties}
chmod 640 ${db_properties}

echo "running ${db_name} database migrations"
cd /usr/share/xroad/db/
/usr/share/xroad/db/liquibase --classpath=/usr/share/xroad/jlib/proxy.jar --url="${db_url}?dialect=ee.ria.xroad.common.db.CustomPostgreSQLDialect" --changeLogFile=/usr/share/xroad/db/${db_name}-changelog.xml --password=${db_passwd} --username=${db_user}  update || die "Connection to database has failed, please check database availability and configuration ad ${db_properties} file"

invoke-rc.d xroad-proxy restart

exit 0

