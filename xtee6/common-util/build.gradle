project.ext.schemaTargetDir = new File("$buildDir/generated-sources")

configurations {
    xjc
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', 'build/generated-sources']
    }
}

dependencies {
    compile 'org.apache.james:apache-mime4j-core:0.7.2'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.apache.santuario:xmlsec:1.5.6'

    compile 'org.bouncycastle:bcpkix-jdk15on:1.50'
    compile 'commons-configuration:commons-configuration:1.9'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-jxpath:commons-jxpath:1.3'
    compile 'com.sun.xml.bind:jaxb-impl:2.2.7'
    compile 'org.slf4j:jcl-over-slf4j:1.6.6'

    compile 'org.eclipse.jetty:jetty-server:8.1.7.v20120910'
    compile 'org.eclipse.jetty:jetty-continuation:8.1.7.v20120910'
    compile 'org.eclipse.jetty:jetty-io:8.1.7.v20120910'
    compile 'org.eclipse.jetty:jetty-xml:8.1.7.v20120910'

    compile 'ch.qos.logback:logback-access:1.0.7'
    compile 'ch.qos.logback:logback-classic:1.0.7'
    compile 'org.quartz-scheduler:quartz:2.1.6'
    compile 'joda-time:joda-time:2.1'
    compile 'xalan:serializer:2.7.1'
    
    compile 'org.apache.httpcomponents:httpasyncclient:4.0'
    compile 'org.apache.httpcomponents:httpclient:4.3.1'
    compile 'org.apache.httpcomponents:httpcore:4.3'
            
    compile 'com.typesafe.akka:akka-actor_2.10:2.2.1'
    compile 'com.typesafe.akka:akka-remote_2.10:2.2.1'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.0'

    testCompile 'org.mockito:mockito-core:1.9.0'

    xjc 'com.sun.xml.bind:jaxb-impl:2.2.7'
    xjc 'com.sun.xml.bind:jaxb-xjc:2.2.7'
}

test {
    jvmArgs '-Djava.library.path=../legacy/lib'
}

task createDirs() {
    project.ext.schemaTargetDir.mkdirs()
}

task xjc() {
    ant.taskdef(name: 'xjc', 
        classname: 'com.sun.tools.xjc.XJCTask', 
        classpath: configurations.xjc.asPath)

    // Generate classes for identifiers
    ant.xjc(
        destdir: project.ext.schemaTargetDir,
        package: 'ee.cyber.sdsb.common.identifier',
        schema: 'src/main/resources/identifiers.xsd'
    )

    // Generate classes for message, using identifier classes
    ant.xjc(
        destdir: project.ext.schemaTargetDir,
        package: 'ee.cyber.sdsb.common.message',
        schema: 'src/main/resources/message.xsd',
        binding: 'src/main/resources/identifiers-bindings.xml'
    )

    // Generate classes for federateable global external conf
    ant.xjc(
        destdir: project.ext.schemaTargetDir,
        package: 'ee.cyber.sdsb.common.conf.globalconf.sharedparameters',
        schema: 'src/main/resources/globalconf/external-conf.xsd',
        binding: 'src/main/resources/identifiers-bindings.xml'
    )

    // Generate classes for federateable global internal conf
    ant.xjc(
        destdir: project.ext.schemaTargetDir,
        package: 'ee.cyber.sdsb.common.conf.globalconf.privateparameters',
        schema: 'src/main/resources/globalconf/internal-conf.xsd',
        binding: 'src/main/resources/identifiers-bindings.xml'
    )

    // Generate classes for request, using identifier classes
    ant.xjc(
        destdir: project.ext.schemaTargetDir,
        package: 'ee.cyber.sdsb.common.request',
        schema: 'src/main/resources/request.xsd',
        binding: 'src/main/resources/identifiers-bindings.xml'
    )

    // Generate classes for hash chains
    ant.xjc(
        destdir: project.ext.schemaTargetDir,
        package: 'ee.cyber.sdsb.common.hashchain',
        schema: 'src/main/resources/hashchain.xsd',
    )

    // Generate classes for service metainfo
    ant.xjc(
        destdir: project.ext.schemaTargetDir,
        package: 'ee.cyber.sdsb.common.metadata',
        schema: 'src/main/resources/service-metainfo.xsd',
        binding: 'src/main/resources/identifiers-bindings.xml'
    )
}

task legacyMake(type: Exec) {
    workingDir '../legacy'
    commandLine 'make'
}

task legacyMakeClean(type: Exec) {
    workingDir '../legacy'
    commandLine 'make', 'clean'
}

classes.dependsOn legacyMake
clean.dependsOn legacyMakeClean

xjc.dependsOn createDirs
compileJava.dependsOn xjc
