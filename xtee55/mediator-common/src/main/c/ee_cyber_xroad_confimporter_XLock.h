/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ee_cyber_xroad_confimporter_XLock */

#ifndef _Included_ee_cyber_xroad_confimporter_XLock
#define _Included_ee_cyber_xroad_confimporter_XLock
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ee_cyber_xroad_confimporter_XLock
 * Method:    init
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ee_cyber_xroad_confimporter_XLock_init
  (JNIEnv *, jobject, jstring);

/*
 * Class:     ee_cyber_xroad_confimporter_XLock
 * Method:    readLock
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ee_cyber_xroad_confimporter_XLock_readLock
  (JNIEnv *, jobject);

/*
 * Class:     ee_cyber_xroad_confimporter_XLock
 * Method:    writeLock
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ee_cyber_xroad_confimporter_XLock_writeLock
  (JNIEnv *, jobject);

/*
 * Class:     ee_cyber_xroad_confimporter_XLock
 * Method:    unlock
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ee_cyber_xroad_confimporter_XLock_unlock
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
